<style>
.bordered-table, .bordered-table td {
    -webkit-border-radius: 0px !important;
	border-radius: 0px !important;
}

.bordered-table {
	border-bottom:2px solid #ccc !important;
}

</style>
<div id="result_output">
	
</div>

<div class="content">
	
	<div class="alert-message error" style="display:none;" data-alert="alert" id="cred_alert">
		<a class="close" href="#">Ã—</a>
		<p><strong>Error!</strong> You need to provide valid Salesforce.com credentials in Project Details.</p>
	</div>

	<% if connections.size == 0 %>
		<div class="alert-message error" data-alert="alert" id="connection_alert">
			<p><strong>Error!</strong> In order to deploy to server(s), you must first create a deployment connection (MavensMate --> Project --> Deployment Connections)</p>
		</div>
		<% return %>
	<% end %>
	
	<ul class="tabs">
		<li class="active"><a href="#form">Deploy Options</a></li>
		<li><a href="#metadata">Metadata</a></li>
		<li><a href="#result" id="result_tab">Result</a></li>
		<li><a href="#arcade" id="arcade_tab">Arcade</a></li>
	</ul>
	
	<div class="pill-content">
		<div id="form" class="active">
			<form class="form-stacked">
				<fieldset>
					<div class="clearfix">
						<label for="un">Deployment Targets</label> 
						<% 
						display = connections.size == 0 ? "block" : "none"
						%>
						
						<% if connections.size > 0 %>
							<select style="width:90%;" id="un_list" multiple="multiple" data-placeholder="Select 1 or more connections...">
								<% connections.each_with_index do |c, i| %>
									<% selected = 'selected="selected"' if i == 0 %>
									<option <%= selected %> value="<%= c[:un] + ";" + c[:type] %>"><%=c[:un]%></option>
								<% end %> 
								<!-- <option value="new">-- Custom Connection --</option> -->
							</select>	
						<% end %>
					</div>			
				</fieldset>
			</form>
			<style>
				.chzn-choices {
					border-radius: 3px !important;
				}

				.deploy_options .clearfix {
					margin-left: 20px;
					margin-bottom:0px;
				}
				.deploy_options input[type="checkbox"] {
					margin: 0px;
					width: 32px;
					float: left;
				}
				.deploy_options .clearfix label {
					width:auto;
				}
				.deploy_options .clearfix label > div {
					float: left;
					width: auto;
					font-weight: bold;
					height: 30px;
					padding-top: 5px;
					cursor: pointer;
				}
				
			</style>
			<form>
				<fieldset class="deploy_options" style="margin:0;padding-top:0px;">
					<div class="clearfix">
						<label>
							<input type="checkbox" id="check_only" style="margin:0px;width:32px;"/>						
							<div id="check_only_label">Validate Only</div>
						</label> 
					</div>
					<!-- <div class="clearfix">
						<label>
							<input type="checkbox" id="save_changeset" style="margin:0px;width:32px;"/>						
							<div>Save as Changeset</div>
						</label>						
					</div>
					<div class="clearfix" id="changeset_name_wrapper" style="display:none;margin-bottom:10px;">
						<label for="cname" style="font-weight:bold;">Changeset Name</label> 
						<input class="xlarge" size="100" type="text" id="cname">
					</div>     -->
<!-- 					<div id="deploy_info" style="display:none;" class="alert-message block-message info">
			        	<p><strong>This deployment will run in async mode.</strong></p>
			        </div> -->

			    </fieldset>
			</form>
		</div>
		
		
		<style>
		#filter {
			background-color:#f7f7f7;
			padding:5px;
			border-bottom:1px solid #ccc;
			margin-bottom:10px;
			position:relative;
		}
		</style>

		<div id="metadata">
			
			<form class="form-stacked" style="padding-left:5px;margin-bottom:2px;">
				<fieldset>
<!-- 			   		<div class="clearfix">
						<label for="ptype">Package Type</label> 
						<select id="ptype">
							<option>Custom</option>
							<option>Changeset</option>
						</select>
					</div>  -->
					<a href="javascript:void(0)" class="btn success" onclick="refresh_index()">Refresh Metadata From Server</a>
					<div class="clearfix" id="changesetwrapper" style="display:none">
						<label for="cset">Changeset</label> 
						<select id="cset">
							<% changesets.each do |c| %>
							<option><%= c %></option>
							<% end %>
						</select>
					</div>   			
				</fieldset>	
			</form>
			
			<script>
			$("#ptype").change(function() {
				if (this.value == "Custom") {
					$("#project_wrapper").show();
					$("#changesetwrapper").hide();
				} else {
					$("#project_wrapper").hide();
					$("#changesetwrapper").show();
				}
			})
			</script>
			
			<div id="project_wrapper">
				
				<div id="filter">
					<input type="text" id="txtFilter" style="width:165px" />
					<a href="#" id="btnClearFilter" onclick="clearFilter();" class="btn small error" style="visibility:invisible;opacity:0;font-weight:bold;position:relative;top:1px;right:30px;padding:4px 7px 4px;">X</a>
					<a href="#" id="btnSelectAll" class="btn small" style="font-weight:normal;padding:4px 7px 4px;">all</a>
					<a href="#" id="btnDeselectAll" class="btn small" style="font-weight:normal;padding:4px 7px 4px;">none</a>
				</div>
				
				<div id="treewrapper">
					<div id="tree">
						<ul>

						</ul>												
					</div>
					<div id="info"></div>
				</div> 
			</div>
		</div>
		
		<div class="content" id="arcade">
			<ul class="tabs tabs-below">
				<li class="game"><a href="#game_pacman">Pacman</a></li>
				<li class="game"><a href="#game_tetris">Tetris</a></li>
				<li class="game"><a href="#game_donkey">Donkey Kong</a></li>
			</ul>
			<div class="pill-content">
				<div class="active" id="game_pacman">
					<embed src="http://www.classicgamesarcade.com/games/pacman.swf" width="100%" height="75%" autostart="true" loop="false" controller="true" id="pacman" class="flash_game"></embed>
				</div>
				<div id="game_tetris">
					<embed src="http://www.classicgamesarcade.com/games/flash-tetris.swf" width="100%" height="75%" autostart="true" loop="false" controller="true" id="tetris" class="flash_game"></embed>
				</div>
				<div id="game_donkey">
					<embed src="http://www.classicgamesarcade.com/games/donkeykong.swf" width="100%" height="75%" autostart="true" loop="false" controller="true" id="donkey" class="flash_game"></embed>
				</div>
			</div>
		</div>

		<div id="result">
			
		</div>		
	</div>
</div> 


<form class="form-stacked" id="action_buttons">
	<fieldset style="padding-top:0px;position:relative;">
		<div class="actions">					
			<input id="btnDeploy" type="button" class="btn primary" value="Deploy to Server"  onclick='deploy()'>
			&nbsp;
			<button type="reset" class="btn" onclick="window.close();">Cancel</button>
		</div>
		<img src="<%=ENV['TM_BUNDLE_SUPPORT']%>/resource/images/big_loading.gif" style="position:absolute;top:13px;right:25px;width:36px;display:none;" id="deployment_indicator"/>
	</fieldset>
</form> 

<script type="text/javascript">
	var mm_cpd = '<%= ENV["MM_CURRENT_PROJECT_DIRECTORY"] %>';
	var has_indexed_metadata = <%= File.exist? "#{ENV["MM_CURRENT_PROJECT_DIRECTORY"]}/config/.org_metadata" %>;
	var operation;
	document.title = "Deploy To Server";

	var child_def = {}
	<%- child_metadata_definition.each do |child| -%>
	child_def['<%= child[:tag_name] %>'] = '<%= child[:xml_name] %>';
	<%- end -%>

	var pw_def = {}
	<%- connections.each do |c| -%>
	pw_def['<%= c[:un] %>'] = '<%= c[:pw] %>';
	<%- end -%>

	var surl_def = {}
	<%- connections.each do |c| -%>
	surl_def['<%= c[:un] %>'] = '<%= c[:server_url] %>';
	<%- end -%>

	function isValidateOnly() {
		if ($("#check_only").is(":checked")) {
			return "1";
		} else {
			return "0";
		}
	}

	function deployMode() {
		if ($("#set_and_forget").is(":checked")) {
			return "async";
		} else {
			return "";
		}
	}

	$("#save_changeset").click(function() {
		if (this.checked) {
			$("#changeset_name_wrapper").show();			
		} else {
			$("#changeset_name_wrapper").hide();
		}
	});

	function resizeWindowAfterResult() {
		window.resizeTo(800, window.innerHeight);
		window.moveTo(
			(screen.width-800)/2,
			(screen.height-document.getElementById('wrapper').offsetHeight-400)/2
			);
	}

$(function() {
 		
		$("#check_only").change(function() {
			if (!this.checked) {
				$("#btnDeploy").val('Deploy to Server');
			} else {
				$("#btnDeploy").val('Validate Deployment');
			}
		});
		
		$("#un_list").change(function() {
			if (this.value == 'new') {
				$("#un").val("");
				$("#un").show();
				$("#pw").val(""); 
				$("#server_url").val("https://www.salesforce.com");
			} else {
				$("#un").hide();
				$("#un").val(this.value);
				$("#pw").val(pw_def[this.value]);
				$("#server_url").val(surl_def[this.value]);
			}
		});
		
		if ($("#un_list").val() != 'new') {
			$("#un").val($("#un_list").val());
			$("#pw").val(pw_def[$("#un_list").val()]);
		}  

		$('.tabs').tabs();

		$("#project_wrapper").height($(window).height() - 225)

		var resizeHeight = $("#form").height();
		resizeAndCenterWindowByHeight(resizeHeight + 250);

		$(window).resize(function() {
			$("#project_wrapper").height($(window).height() - 225)
			resize_games()
		});


		$.expr[':'].Contains = function(a, i, m) {
			return (a.textContent || a.innerText || "").toUpperCase().indexOf(m[3].toUpperCase()) >= 0;
		};

		$("#txtFilter")
		.change(function() {
			var filter = $(this).val(); 
			//if (filter.length < 3) return false;
	        // if (filter) {
	        //     // this finds all links in a list that contain the input,
	        //     // and hide the ones not containing the input while showing the ones that do
	        //     $(".dynatree-node").find("a:not(:Contains(" + filter + "))").parent().parent().hide();
	        //     $(".dynatree-node").find("a:Contains(" + filter + ")").parent().parent().show();
	        //     $(".dynatree-node").parent().parent().prev().each(function() {
	        //         var node = $.ui.dynatree.getNode(this);
	        //         console.log(node);
	        //     });
	        // } else {
	        //     $(".dynatree-node").parent().show();
	        // }
	        if (filter) {
	        	$("#btnClearFilter").css({opacity: 1.0, visibility: "visible"})
	        	expandAll();        	
	        	filter_tree(filter);				
	        } else {
	        	$("#btnClearFilter").css({opacity: 0.0, visibility: "invisible"})
	        	clearFilter();
	        }
	        return false;
	    })
		.keyup(function() {
	        // fire the above change event after every letter	
	        $(this).change();
	    });
		
		index_org(!has_indexed_metadata);

		$("#un_list").chosen();
	});

	function filter_tree(searchTerm) {
		var regex = new RegExp(searchTerm,"i");
		rootNode.visit(function(node) {
			if (node.isVisible() && node.data.title) {
				nodeTitle = node.data.title;
				if ( nodeTitle.match(regex) ) {
					node.visitParents(function(node) {
						$(node.li).show();
						return (node.parent != null);
					}, true); 
					return 'skip';  
				} else {
					$(node.li).hide();
				}
			}
		});
	}

	function expandAll() {
		$("#tree").dynatree("getRoot").visit(function(node){
			node.expand(true);
		});
	}

	function collapseAll() {
		$("#tree").dynatree("getRoot").visit(function(node){
			node.expand(false);
		});
	}

	function clearFilter() {
		$('#txtFilter').val('');
		$("#btnClearFilter").css({opacity: 0.0, visibility: "visible"});
		collapseAll();
		$(".dynatree-container li").show(); 
		$('#txtFilter').focus();
	}

	$("#btnDeselectAll").click(function(){
		$("#tree").dynatree("getRoot").visit(function(node){   		
			if ($(node.li).css('display') != 'none') { 
				try {
					if (node.data.level > 1)
						node.select(false);
				} catch(e) {
					node.select(false);   				
				}
			}
		});
		return false;
	});
	$("#btnSelectAll").click(function(){
		$("#tree").dynatree("getRoot").visit(function(node){		   			
			if ($(node.li).css('display') != 'none') {
				try {
					if (node.data.level > 1)
						node.select(true);
				} catch(e) {
					node.select(true);   				
				}
			}   		
		});
		return false;
	});

	var rootNode;

	function index_org(refresh) {
		console.log('indexing org')
		console.log(refresh)
		operation = "index"
		$.ajax({
			type: "GET",
			url: "http://127.0.0.1:7777/metadata/index", 
			data: {
				mm_current_project_directory: mm_cpd,
				do_refresh: refresh
			},
			beforeSend: function() { showLoading('Indexing your Salesforce.com metadata.  This operation could take a while depending on the size of your org.<br/><br/>Thanks for being patient! :)'); },
			complete: function(data){
				console.log(data)
				var response = JSON.parse(data.responseText)
				setTimeout(function() { check_status(response["id"]); }, 500);		
			} 
		});
	}

	function get_target_json() {
		var targets = $("#un_list").val();
		var ts = []
		for (t in targets) {
			console.log(targets[t])
			var username = targets[t].split(';')[0]
			var type = targets[t].split(';')[1]
			var t = {}
			t.username = username
			t.type = type
			ts.push(t)
		}
		var json1 = JSON.stringify(ts)
		return json1 
	}

	function handle_response(response) {
		if (operation == "deploy") {
			$("#result").html(response["body"]);

			hideElement("deployment_indicator");
			$("#btnDeploy").show();

			$(".result_table_class").height($(window).height() - 300)
			$(window).resize(function() {
		        $(".result_table_class").height($(window).height() - 300)
		    });

			if ($("#arcade").css("display") == "none") {
				$("#result_tab").click();
			    resizeWindowAfterResult();
			}
		} else if (operation == "index") {
			$("#tree").dynatree("destroy")
			$("#tree ul").html(response["body"]);
			$("#tree").dynatree({
				persist: false,
				checkbox: true,
				selectMode: 3
			});
			$("#tree").dynatree("getRoot").visit(function(node) {
				node.expand(false);
			});  
			rootNode = $("#tree").dynatree("getRoot");
			hideLoading();	
		}
	}

	function deploy() {
		operation = "deploy"
		$.ajax({
			type: "POST",
			url: "http://127.0.0.1:7777/deploy", 
			data: {
				targets: get_target_json(),
			    check_only: isValidateOnly(),
			    tree: get_tree(),
			    mm_current_project_directory: mm_cpd
			},
			beforeSend: function() { showElement("deployment_indicator"); $("#btnDeploy").hide()  },
			complete: function(data){
				console.log(data)
				var response = JSON.parse(data.responseText)
				check_status(response["id"])
			} 
	 	});
	} 

function refresh_index() {
	index_org(true);
}


</script>
